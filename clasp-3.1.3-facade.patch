Index: libclasp/clasp/clasp_facade.h
===================================================================
--- libclasp/clasp/clasp_facade.h	(revision 47795)
+++ libclasp/clasp/clasp_facade.h	(working copy)
@@ -220,7 +220,7 @@
 	/*!
 	 * \pre solving() is false and program updates are enabled.
 	 */
-	ProgramBuilder&    update(bool updateConfig = false);
+	ProgramBuilder&    update(bool updateConfig = false, bool updateProgram = true);
 	//@}
 	
 	//! Solves the current problem.
@@ -334,6 +334,7 @@
 	bool prepared()    const;
 	bool interrupted() const;
 	bool solved()      const;
+	const LitVec& assumptions() const { return assume_; }
 	
 	ExpectedQuantity   getStat(const char* path)const;
 	const char*        getKeys(const char* path)const;
Index: libclasp/src/clasp_facade.cpp
===================================================================
--- libclasp/src/clasp_facade.cpp	(revision 47795)
+++ libclasp/src/clasp_facade.cpp	(working copy)
@@ -369,7 +369,7 @@
 	return lpStats_.get() != 0; // currently only ASP supports program updates
 }
 
-ProgramBuilder& ClaspFacade::update(bool reloadConfig) {
+ProgramBuilder& ClaspFacade::update(bool reloadConfig, bool updateProgram) {
 	CLASP_ASSERT_CONTRACT(config_ && program() && !solving());
 	CLASP_ASSERT_CONTRACT_MSG(step_.result.signal != SIGINT, "Interrupt not handled!");
 	if (reloadConfig) { 
@@ -378,7 +378,7 @@
 	if (solved()) {
 		startStep(step() + 1);
 	}
-	if (builder_->frozen()) {
+	if (builder_->frozen() && updateProgram) {
 		assume_.clear();
 		builder_->updateProgram();
 	}
