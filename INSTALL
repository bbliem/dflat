COMPILING

Compilation of D-FLAT has been tested with the following versions of the dependencies:
- CMake (http://cmake.org/), version 2.8.12.1
- Boost (http://boost.org/), version 1.55.0
- libgringo (http://potassco.sourceforge.net/), version 3.0.5
- libclasp (http://potassco.sourceforge.net/), version 2.1.4
- GMP (http://gmplib.org/), version 5.1.3 -- make sure to also compile the C++ interface
- SHARP (http://www.dbai.tuwien.ac.at/research/project/sharp/) with D-FLAT-specific modifications, for now provided only on the D-FLAT website, http://dbai.tuwien.ac.at/research/project/dflat/

Compilation was tested with the stated version numbers and GCC 4.8.2, as well as with clang 3.3. Unless the developers of the dependencies introduce incompatible changes, later versions should work too. (Older versions might work if you're lucky.) If you run into any problems with later releases, try compiling D-FLAT with the version specified above.

You need to adjust the paths in D-FLAT's Makefile. In particular, the variables gringo_dir, clasp_dir and sharp_dir.

Then, running "make" in the D-FLAT top-level directory should build the binary at build/release/dflat.

---

TROUBLESHOOTING

Make sure that Gringo, Clasp, SHARP and D-FLAT are built with the same C++ preprocessor defines. In particular, for the debug build, Gringo by default uses defines like -DGLIBCXX_DEBUG which Clasp's debug build does not use. Since I had some problem with Clasp when defining these flags, I would recommend NOT compiling Gringo with them.

If you run into problems regarding Gringo in combination with Lua, consider removing -DWITH_LUA=shipped from Gringo's Makefile.

Gringo as of 3.0.5 has the indecency to issue warnings on stderr without asking. These warnings often do not hint at errors in the ASP program and will almost certainly occur with your encodings when you use D-FLAT. You are encouraged to comment-out the following lines in libgringo/src/stmdep.cpp:
			if(pred.empty() && !pred.pred()->dom()->external())
			{
				std::cerr << "% warning: ";
				pred.print(g, std::cerr);
				std::cerr << " is never defined" << std::endl;
			}

---

COMPILATION FLAGS

D-FLAT supports the following preprocessor defines:

- DECOMPOSITION_COMPATIBILITY: Causes D-FLAT to build identical decompositions as the old version 0.2, when both are supplied with identical random seeds. (Causes a little overhead.)
- DISABLE_CHECKS: Disables some checks to make sure the user-supplied program is correct. Not recommended unless you have tested the program thoroughly and want to gain extra performance.
- NO_UNICODE: Avoids unicode special symbols for printing item trees in favor of ASCII symbols. Less beautiful, but probably more portable.
